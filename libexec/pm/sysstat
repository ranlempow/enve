#!/usr/bin/env dash


true '
loadavg.1m
loadavg.5m
loadavg.15m
cpu.user
cpu.sys
mem.used
mem.free
disk.tps
disk.kbs
net.ipkts
net.opkts
net.ikbs
net.okbs
'


if [ -z "${LINUX:-}" ]; then
    top -l 2 -n 0 | tail -n +10 | {
        toptext="$(cat)"
        printf %s\n "$toptext" | grep "Load Avg:" | \
            sed -e 's/Load Avg: \([0-9]\+\.[0-9]\+\), \([0-9]\+\.[0-9]\+\), \([0-9]\+\.[0-9]\+\).*/loadavg.1m=\1\nloadavg.5m=\2\nloadavg.15m=\3/g'
        printf %s\n "$toptext" | grep "CPU usage:" | \
            sed -e 's/CPU usage: \([0-9]\+\.[0-9]\+\)% user, \([0-9]\+\.[0-9]\+\)% sys, [0-9]\+\.[0-9]\+% idle.*/cpu.user=\1\ncpu.sys=\2/g'
        printf %s\n "$toptext" | grep "PhysMem:" | \
            sed -e 's/PhysMem: \([0-9]\+[KMG]\) used ([0-9]\+[KMG] wired), \([0-9]\+[KMG]\) unused.*/mem.used=\1\nmem.free=\2/g'
    }

    iostat -d -c 2 | tail -n 1 | \
    sed -e 's/ \+[0-9]\+\.[0-9]\+ \+\([0-9]\+\) \+\([0-9]\+\.[0-9]\+\)/\1 \2\n/g' | awk '{
    tps+=$1; kbs+=$2;
    }END{ printf("disk.tps=%d\ndisk.kbs=%.2f\n", tps, kbs) }'

    netstat -i -b -n | grep '<Link' | grep -v 'lo0' | awk '{
    Ipkts+=$5; Ibytes+=$7; Opkts+=$8; Obytes+=$10
    }END{ printf("net.ipkts=%d\nnet.opkts=%d\nnet.ikbs=%.2f\nnet.okbs=%.2f\n", Ipkts, Opkts, Ibytes / 1000, Obytes / 1000) }'


else
    # alpine: top -b -n 1 | head -n 10
    # freebsd: top -bt | head -n 10


    devs=
    while read -r dev tps read_kbs wrtn_kbs; do
        if [ "${devs%$dev *}" = "$devs" ]; then
            devs="$devs$dev "
            eval V$dev="$tps $read_kbs $wrtn_kbs"
        fi
    done <<EOF
$(iostat -d 1 2)
EOF
    sumtps=0
    sumkbs=0
    for dev in $devs; do
        read -r tps read_kbs wrtn_kbs <<EOF
$(eval echo V$dev)
EOF
        sumtps="$sumtps + $tps"
        sumkbs="$sumkbs + $read_kbs + $wrtn_kbs"
    done
    echo "$sumtps" | bc
    echo "$sumkbs" | bc
    
    while true; do
        $(
            ifconfig p1p1 | grep packets | awk '{print $5, $3}' | \
            xargs echo | sed -E -e "s/([0-9]+) ([0-9]+) ([0-9]+) ([0-9]+)/rx=\1 rxp=\2 tx=\3 txp=\4/"
        )
        echo $rx $rxp $tx $txp $(cat /tmp/netstat) | awk '{print $1-$5, $2-$6, $3-$7, $4-$8}'
        echo $rx $rxp $tx $txp > /tmp/netstat
        sleep 5
    done
fi
