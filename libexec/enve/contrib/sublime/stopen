#!/bin/sh

# for a in "$@"; do
#     printf %s\\n "$a"
# done > ~/STOPEN
# exit 1

ENVE_HOME=${ENVE_HOME:-${0%/*/*/*/*}}

# shellcheck source=libexec/enve/base
. "$ENVE_HOME/enve/base"

settrace

getwintitle="$ENVE_HOME/enve/core/macos/getwintitle.applescript"
sublime_text="/Applications/Sublime\ Text.app/Contents/MacOS/Sublime\ Text"
sublime_subl="/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"

waitexit=
case ${1:-} in
    -w|--wait) waitexit=1 ;;
esac

if [ -z "${1:-}" ]; then
    return 1
fi

# editor = /Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl -n -w

text_path=
prj=

if [ "${1%.sublime-workspace}" != "$1" ]; then
    prj_path=$1
    prj=$(basename "$prj_path")
    prj=${prj%.sublime-workspace}
else
    text_path=$1
    line=${2:-1}
    col=${3:-1}

    # find project root
    prj_root=$1
    while [ ! -e "${prj_root}/enve.ini" ]; do
        prj_root=${prj_root%/*}
    done
    if [ -e "${prj_root}/enve.ini" ]; then
        prj=$(basename "$prj_root")
    fi
fi

prj=${PRJ_NAME:-$prj}

do_daemonlize() {

    # shellcheck source=libexec/enve/base
    . "$ENVE_HOME/enve/envelib"

    ENVE_CONFIG_TEXT="inherit=$ENVE_HOME/enve/preset/sublime.enve.ini$newl"
    if [ -n "${TMUX_SOCKET:-}" ]; then
        ENVE_CONFIG_TEXT="${ENVE_CONFIG_TEXT}exec.method=reparent_tmux$newl" \
            enve_fire run "Sublime Text"
        # _exec_reparent_tmux "$sublime_text"
    else
        ENVE_CONFIG_TEXT="${ENVE_CONFIG_TEXT}exec.method=reparent_nohup$newl" \
            enve_fire run "Sublime Text"
        # _exec_reparent_nohup "$sublime_text"
    fi
}

do_subl() {
    if [ -n "$text_path" ]; then
        "$sublime_subl" ${waitexit:+--wait} "$text_path:$line:$col"
    else
        "$sublime_subl" --new-window --project "$prj_path"
    fi
}

try_do_subl() {
    if [ -n "$prj" ] && \
       [ -n "$(/usr/bin/osascript "$getwintitle" "Sublime Text"  " — $prj" --raise)" ]; then
        if [ -n "$text_path" ]; then
            do_subl
        fi
    elif [ -n "$(/usr/bin/osascript "$getwintitle" "Sublime Text")" ]; then
        # Sublime Text is open, but no project window
        do_subl
    else
        # Sublime Text is not open
        return 1
    fi
}

if ! try_do_subl; then
    do_daemonlize
    fast_sleep 2
    try_do_subl
fi


# if [ -n "$prj" ] && \
#    [ -n "$(/usr/bin/osascript "$getwintitle" "Sublime Text"  " — $prj" --raise)" ]; then
#     if [ -n "$text_path" ]; then
#         do_subl
#     fi
# elif [ -n "$(/usr/bin/osascript "$getwintitle" "Sublime Text")" ]; then
#     # Sublime Text is open, but no project window
#     do_subl
# else
#     # Sublime Text is not open
#     # "$sublime_text" "$prj_path"
#     # "$sublime_text"
#     do_deamonlize
#     fast_sleep 2
#     # do_subl
# fi

