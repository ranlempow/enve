#!/bin/sh

# shellcheck source=libexec/enve/base
. "$ENVE_HOME/enve/base"

# shellcheck source=libexec/enve/envelib
. "$ENVE_HOME/enve/envelib"

settrace


resolve_nt_cygwin_late() {

    fast_get_system
    case "$ENVE_CACHED_OS" in
        MINGW*|MSYS*)
                MSYSTEM="${MSYSTEM:-MSYS}"
                out_var MSYSTEM "$MSYSTEM"
            ;;
        CYGWIN) ;;
    esac

    out_join PKG_CONFIG_PATH ":"
    out_join ACLOCAL_PATH ":"
    out_join MANPATH ":"
    out_join INFOPATH ":"


    case "${MSYSTEM}" in
        MINGW32)
                MSYSTEM_PREFIX='/mingw32'
                MSYSTEM_CARCH='i686'
                MSYSTEM_CHOST='i686-w64-mingw32'
                MINGW_CHOST="${MSYSTEM_CHOST}"
                MINGW_PREFIX="${MSYSTEM_PREFIX}"
                MINGW_PACKAGE_PREFIX="mingw-w64-${MSYSTEM_CARCH}"
                CONFIG_SITE="${MSYSTEM_PREFIX}/etc/config.site"

                out_var MSYSTEM_PREFIX "$MSYSTEM_PREFIX"
                out_var MSYSTEM_CARCH "$MSYSTEM_CARCH"
                out_var MSYSTEM_CHOST "$MSYSTEM_CHOST"
                out_var MINGW_CHOST "$MINGW_CHOST"
                out_var MINGW_PREFIX "$MINGW_PREFIX"
                out_var MINGW_PACKAGE_PREFIX "$MINGW_PACKAGE_PREFIX"
                out_var CONFIG_SITE "$CONFIG_SITE"
            ;;
        MINGW64)
                MSYSTEM_PREFIX='/mingw64'
                MSYSTEM_CARCH='x86_64'
                MSYSTEM_CHOST='x86_64-w64-mingw32'
                MINGW_CHOST="${MSYSTEM_CHOST}"
                MINGW_PREFIX="${MSYSTEM_PREFIX}"
                MINGW_PACKAGE_PREFIX="mingw-w64-${MSYSTEM_CARCH}"
                CONFIG_SITE="${MSYSTEM_PREFIX}/etc/config.site"

                out_var MSYSTEM_PREFIX "$MSYSTEM_PREFIX"
                out_var MSYSTEM_CARCH "$MSYSTEM_CARCH"
                out_var MSYSTEM_CHOST "$MSYSTEM_CHOST"
                out_var MINGW_CHOST "$MINGW_CHOST"
                out_var MINGW_PREFIX "$MINGW_PREFIX"
                out_var MINGW_PACKAGE_PREFIX "$MINGW_PACKAGE_PREFIX"
                out_var CONFIG_SITE "$CONFIG_SITE"
            ;;
        MSYS*)
                MSYSTEM_PREFIX='/usr'
                # TODO: HOSTTYPE and MACHTYPE is bash-only variable
                MSYSTEM_CARCH="${HOSTTYPE}"
                MSYSTEM_CHOST="${MACHTYPE}"
                CONFIG_SITE="/etc/config.site"

                out_var MSYSTEM_PREFIX "$MSYSTEM_PREFIX"
                out_var MSYSTEM_CARCH "$MSYSTEM_CARCH"
                out_var MSYSTEM_CHOST "$MSYSTEM_CHOST"
                out_var CONFIG_SITE "$CONFIG_SITE"
            ;;
    esac

    case "${MSYSTEM}" in
        MINGW32|MINGW64)
                # MINGW_MOUNT_POINT="${MINGW_PREFIX}"
                out_list PATH "${MSYSTEM_PREFIX}/bin"
                out_list PKG_CONFIG_PATH "${MSYSTEM_PREFIX}/lib/pkgconfig"
                out_list PKG_CONFIG_PATH "${MSYSTEM_PREFIX}/share/pkgconfig"
                out_list ACLOCAL_PATH "${MSYSTEM_PREFIX}/share/aclocal"
                out_list ACLOCAL_PATH "/usr/share/aclocal"
                out_list MANPATH "${MSYSTEM_PREFIX}/local/man"
                out_list MANPATH "${MSYSTEM_PREFIX}/share/man"
            ;;
        *)
                out_list PKG_CONFIG_PATH "/usr/lib/pkgconfig"
                out_list PKG_CONFIG_PATH "/usr/share/pkgconfig"
                out_list PKG_CONFIG_PATH "/lib/pkgconfig"
                # PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig:/lib/pkgconfig"
            ;;
    esac


    if [ -n ${MSYSTEM:-} ]; then
        out_list MANPATH "/usr/local/man"
        out_list MANPATH "/usr/share/man"
        out_list MANPATH "/usr/man"
        out_list MANPATH "/share/man"

        out_list INFOPATH "/usr/local/info"
        out_list INFOPATH "/usr/share/info"
        out_list INFOPATH "/usr/info"
        out_list INFOPATH "/share/info"
    fi

    out_list PATH "/usr/local/bin"
    out_list PATH "/usr/bin"
    out_list PATH "/bin"
    if [ "${MSYSTEM#MSYS*}" != "$MSYSTEM" ]; then
        out_list PATH "/opt/bin"
    fi

    MSYS2_PATH="/usr/local/bin:/usr/bin:/bin"
    WIN_ROOT="$(PATH=${MSYS2_PATH} exec cygpath -Wu)"

    out_list PATH "${WIN_ROOT}/System32"
    out_list PATH "${WIN_ROOT}/System32/Wbem"
    out_list PATH "${WIN_ROOT}/System32/System32/WindowsPowerShell/v1.0"

    out_var ORIGINAL_PATH "${WIN_ROOT}/System32:${WIN_ROOT}:${WIN_ROOT}/System32/Wbem:${WIN_ROOT}/System32/WindowsPowerShell/v1.0/"
}


main() {
    info "IN $ZERO/enve.module"
    TABLE=$(cat "${configfile:--}")
    for proc in nt_cygwin_late; do

        info "IN resolve_$proc"
        if ! TABLE=$(TABLE=$TABLE resolve_$proc); then
            _error "error at resolve_$proc"
            exit 1
        fi
        # info "OUT resolve_$proc"
    done

    info "OUT $ZERO/enve.module"
    [ -n "$TABLE" ] && echo "$TABLE"
}

# if [ "${TEST:-}" != "test" ]; then
# fi

