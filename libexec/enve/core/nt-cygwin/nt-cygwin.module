#!/bin/sh

# shellcheck source=libexec/enve/base
. "$ENVE_HOME/enve/base"

# shellcheck source=libexec/enve/envelib
. "$ENVE_HOME/enve/envelib"

settrace

# resolve_nt_cygwin() {
#     out_var TZ "$(tzset)"
#     out_list BYPASS "SSH_AUTH_SOCK"
#     out_list BYPASS "TERMINFO"
#     out_list BYPASS "KITTY_WINDOW_ID"
#     out_list BYPASS "COLORTERM"

#     for winenv in   ALLUSERSPROFILE \
#                     ANSICON \
#                     ANSICON_DEF \
#                     APPDATA \
#                     COMSPEC \
#                     EXECIGNORE \
#                     HOMEDRIVE \
#                     HOMEPATH \
#                     LOCALAPPDATA \
#                     OS; do
#         out_list BYPASS $winenv
#     done

#     # Set the user id
#     USER="$(/usr/bin/id -un)"

#     # TMP and TEMP as defined in the Windows environment
#     # can have unexpected consequences for cygwin apps, so we define
#     # our own to match GNU/Linux behaviour.
#     ORIGINAL_TMP="${ORIGINAL_TMP:-${TMP}}"
#     ORIGINAL_TEMP="${ORIGINAL_TEMP:-${TEMP}}"
#     unset TMP TEMP
#     TMP="/tmp"
#     TEMP="/tmp"

#     if [ ! -d "${HOME}" ]; then
#         if ! mkdir -p "${HOME}"; then
#             echo "${HOME} could not be created."
#             { [ -d "${TEMP}" ] && HOME="${TEMP}"; } ||
#             { [ -d "${TMP}" ] && HOME="${TMP}"; } ||
#             { [ -d /tmp ] && HOME=/tmp; } ||
#             HOME=/
#             echo "Setting HOME to ${HOME}."
#         fi
#     fi
#     HOSTNAME="$(/usr/bin/hostname)"

#     PATH="/usr/local/bin:/usr/bin"
#     MSYS2_PATH="/usr/local/bin:/usr/bin:/bin"

#     if [ -n ${MSYSTEM:-} ]; then
#         MANPATH='/usr/local/man:/usr/share/man:/usr/man:/share/man'
#     fi
#     INFOPATH='/usr/local/info:/usr/share/info:/usr/info:/share/info'
#     WIN_ROOT="$(PATH=${MSYS2_PATH} exec cygpath -Wu)"
#     ORIGINAL_PATH="${WIN_ROOT}/System32:${WIN_ROOT}:${WIN_ROOT}/System32/Wbem:${WIN_ROOT}/System32/WindowsPowerShell/v1.0/"
#     case "${MSYSTEM}" in
#     MINGW32)
#       MINGW_MOUNT_POINT="${MINGW_PREFIX}"
#       PATH="${MINGW_MOUNT_POINT}/bin:${MSYS2_PATH}${ORIGINAL_PATH:+:${ORIGINAL_PATH}}"
#       PKG_CONFIG_PATH="${MINGW_MOUNT_POINT}/lib/pkgconfig:${MINGW_MOUNT_POINT}/share/pkgconfig"
#       ACLOCAL_PATH="${MINGW_MOUNT_POINT}/share/aclocal:/usr/share/aclocal"
#       MANPATH="${MINGW_MOUNT_POINT}/local/man:${MINGW_MOUNT_POINT}/share/man:${MANPATH}"
#       ;;
#     MINGW64)
#       MINGW_MOUNT_POINT="${MINGW_PREFIX}"
#       PATH="${MINGW_MOUNT_POINT}/bin:${MSYS2_PATH}${ORIGINAL_PATH:+:${ORIGINAL_PATH}}"
#       PKG_CONFIG_PATH="${MINGW_MOUNT_POINT}/lib/pkgconfig:${MINGW_MOUNT_POINT}/share/pkgconfig"
#       ACLOCAL_PATH="${MINGW_MOUNT_POINT}/share/aclocal:/usr/share/aclocal"
#       MANPATH="${MINGW_MOUNT_POINT}/local/man:${MINGW_MOUNT_POINT}/share/man:${MANPATH}"
#       ;;
#     *)
#       PATH="${MSYS2_PATH}:/opt/bin${ORIGINAL_PATH:+:${ORIGINAL_PATH}}"
#       PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig:/lib/pkgconfig"
#     esac
# }



resolve_nt_cygwin() {
    out_var TZ "$(tzset)"
    out_list BYPASS "SSH_AUTH_SOCK"
    out_list BYPASS "TERMINFO"
    out_list BYPASS "KITTY_WINDOW_ID"
    out_list BYPASS "COLORTERM"

    for winenv in   ALLUSERSPROFILE \
                    ANSICON \
                    ANSICON_DEF \
                    APPDATA \
                    COMSPEC \
                    EXECIGNORE \
                    HOMEDRIVE \
                    HOMEPATH \
                    LOCALAPPDATA \
                    OS; do
        out_list BYPASS $winenv
    done

    # Set the user id
    USER="$(/usr/bin/id -un)"
    out_var USER "$USER"

    # TMP and TEMP as defined in the Windows environment
    # can have unexpected consequences for cygwin apps, so we define
    # our own to match GNU/Linux behaviour.
    ORIGINAL_TMP="${ORIGINAL_TMP:-${TMP}}"
    ORIGINAL_TEMP="${ORIGINAL_TEMP:-${TEMP}}"
    # unset TMP TEMP
    # TMP="/tmp"
    # TEMP="/tmp"
    out_var "ORIGINAL_TMP" "$ORIGINAL_TMP"
    out_var "ORIGINAL_TEMP" "$ORIGINAL_TEMP"
    out_var "TMP" "/tmp"
    out_var "TEMP" "/tmp"


    if [ ! -d "${HOME}" ]; then
        if ! mkdir -p "${HOME}"; then
            echo "${HOME} could not be created."
            { [ -d "${TEMP}" ] && HOME="${TEMP}"; } ||
            { [ -d "${TMP}" ] && HOME="${TMP}"; } ||
            { [ -d /tmp ] && HOME=/tmp; } ||
            HOME=/
            echo "Setting HOME to ${HOME}."
        fi
    fi

    HOSTNAME="$(/usr/bin/hostname)"

    # out_var HOME "$HOME"
    out_var HOSTNAME "$HOSTNAME"
    out_var CYGWIN "winsymlinks:lnk export"
}


main() {
    info "IN $ZERO/enve.module"
    TABLE=$(cat "${configfile:--}")
    for proc in nt-cygwin; do

        info "IN resolve_$proc"
        if ! TABLE=$(TABLE=$TABLE resolve_$proc); then
            _error "error at resolve_$proc"
            exit 1
        fi
        # info "OUT resolve_$proc"
    done

    info "OUT $ZERO/enve.module"
    [ -n "$TABLE" ] && echo "$TABLE"
}

# if [ "${TEST:-}" != "test" ]; then
# fi

