#!/bin/sh
#
# module
# enve.no_nix
#


# set -euo pipefail


# ENVE_HOME="$(dirname $0)/.."
# ENVE_HOME="${0%/*}/.."

# shellcheck source=libexec/enve/baselib
. "$ENVE_HOME/enve/baselib"

# shellcheck source=libexec/enve/tablelib
. "$ENVE_HOME/enve/tablelib"

# shellcheck source=libexec/enve/pathutils
. "$ENVE_HOME/enve/pathutils"
settrace


builtin_loader() {

    normalize "$ENVE_HOME/enve/core/base"

    fast_get_system
    case "$ENVE_CACHED_OS" in
        FreeBSD)    normalize "$ENVE_HOME/enve/core/freebsd" ;;
        Darwin)     normalize "$ENVE_HOME/enve/core/macos" ;;
        Linux)      normalize "$ENVE_HOME/enve/core/linux" ;;
        MINGW*|MSYS*|CYGWIN) normalize "$ENVE_HOME/enve/core/nt-cygwin" ;;
    esac

    fast_table_tail "core\\.target"
    target=$TABLE_TAIL
    case "$target" in
        shell)      normalize "$ENVE_HOME/enve/core/terminal" ;;
    esac

    fast_table_tail "enve\\.no_nix"
    if [ "$TABLE_TAIL" != "true" ] && { [ "$ENVE_CACHED_OS" = 'Darwin' ] ||
                                        [ "$ENVE_CACHED_OS" = 'Linux' ] ; }; then
        normalize "$ENVE_HOME/enve/core/nix" ;
    else
        case "$ENVE_CACHED_OS" in
            MINGW*|MSYS*) #normalize "$ENVE_HOME/enve/core/pacman"
                ;;
            CYGWIN) #normalize "$ENVE_HOME/enve/core/nt-cygwin"
                ;;
            *)
                    fast_table_subset "enve\\.pkg-system"
                    case ${TABLE_SUBSET:-brew} in
                        brew) normalize "$ENVE_HOME/enve/core/brew" ;;
                        pkgsrc) normalize "$ENVE_HOME/enve/core/pkgsrc" ;;
                    esac
                ;;
        esac
    fi

    # fast_table_subset "pkgs\\..*"
    # if [ -n "$TABLE_SUBSET" ]; then
    #     echo "$ENVE_HOME/enve/core/brew"
    # fi
    # fast_table_subset "brew\\..*"
    # if [ -n "$TABLE_SUBSET" ]; then
    #     echo "$ENVE_HOME/enve/core/brew"
    # fi


    # table_subset "module\\.[[:alnum:]]*" | as_postfix "module\\." | \
    # while IFS="${tab}" read -r name value; do
    # echo "$ENVE_HOME"
    fast_table_subset "python\\..*"
    # if [ -n "$(table_subset "python\\..*")" ]; then
    # if [ -n "$(table_subset "python")" ]; then
    if [ -n "$TABLE_SUBSET" ]; then
        echo "$ENVE_HOME/enve/core/pyvenv"
    fi
    fast_table_subset "nodejs\\..*"
    # if [ -n "$(table_subset "nodejs\\..*")" ]; then
    # if [ -n "$(table_subset "nodejs")" ]; then
    if [ -n "$TABLE_SUBSET" ]; then
        echo "$ENVE_HOME/enve/core/nodejs"
    fi
    fast_table_subset "ruby\\..*"
    # if [ -n "$(table_subset "ruby\\..*")" ]; then
    # if [ -n "$(table_subset "ruby")" ]; then
    if [ -n "$TABLE_SUBSET" ]; then
        echo "$ENVE_HOME/enve/core/ruby"
    fi
    fast_table_subset "oh-my-zsh\\..*"
    # if [ -n "$(table_subset "oh-my-zsh\\..*")" ]; then
    if [ -n "$TABLE_SUBSET" ]; then
        echo "$ENVE_HOME/enve/core/oh-my-zsh"
    fi
    # printf %s\\n "$TABLE" >&2
    # echo "$(table_subset "module" )" >&2
    # echo "$(table_subset "module" | as_value)" >&2

    fast_table_tail "layout\\.root"
    root=${TABLE_TAIL:-$PWD}
    root=${root%/}

    fast_table_subset "module"
    fast_as_value

    # { table_subset "module" | as_value || true; } | \
    while read -r value; do
        # echo o${value}o >&2
        if [ -z "$value" ]; then
            continue
        elif [ -d "$ENVE_HOME/enve/core/$value" ]; then
            echo "$ENVE_HOME/enve/core/$value"
        elif [ -d "$ENVE_HOME/enve/contrib/$value" ]; then
            echo "$ENVE_HOME/enve/contrib/$value"
        else
            d=$value
            fast_resolve_path
            value=$d
            if [ -d "$value" ]; then
                echo "$value"
            fi
        # elif [ "${value%"${value#?}"}" != '/' ] && [ -d "$root/$value" ]; then
        #     echo "$root/$value"
        # elif [ -d "$value" ]; then
        #     echo "$value"
        fi
        # elif [ -d "$(resolve_path "$value")" ]; then
        #     resolve_path "$value"
        # fi
    done <<EOF
$TABLE_AS
EOF

}


# path_loader() {
#     table_subset "module\\.[[:alnum:]]*\\.path" | as_postfix "module\\." | {
#         while IFS="${tab}" read -r name value; do
#             name="${name%.path}"
#             path="$(resolve_path "$value")"
#             if [ -d "$path" ]; then
#                 echo "$path"
#                 return 0
#             fi
#         done
#     } || return 0
# }


main() {
    info "IN $(basename $ZERO)/enve.loader"
    TABLE=$(cat "${configfile:--}")
    builtin_loader
    # path_loader
    info "OUT $(basename $ZERO)/enve.loader"
}

# if [ -n "${_SOURCE_FILE:-}" ]; then
#     main
# fi

