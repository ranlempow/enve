#!/bin/sh

# shellcheck source=libexec/enve/baselib
. "$ENVE_HOME/enve/baselib"

# shellcheck source=libexec/enve/wslib
. "$ENVE_HOME/enve/wslib"

# shellcheck source=libexec/enve/pathutils
. "$ENVE_HOME/enve/pathutils"

# shellcheck source=libexec/enve/gitlib
. "$ENVE_HOME/enve/gitlib"

settrace

# recommend PREFIX:
#   /usr/local      -> /var/lib/enve
#   /opt/enve       -> /var/opt/enve
#   /usr            -> /var/lib/enve

install_enve_tar() {
    CLONE_TO="${CLONE_TO:-"$HOME/.local/enve/repository"}"
    ENVE_TAR_URL="https://github.com/ranlempow/enve/archive/refs/heads/master.tar.gz"
    curl -fsL "$ENVE_TAR_URL" | tar xvz -C "$CLONE_TO"
    if [ "${INSTALL_LINKS:-}" = 1 ]; then
        "$CLONE_TO/libexec/enve/core/base/enve.setup" install-link
    fi
}

install_enve_git() {
    CLONE_TO="$HOME/.local/enve/repository"
    mkdir -p "$CLONE_TO"

    CLONE_TO="$CLONE_TO" \
    GIT_REMOTE_URL="https://github.com/ranlempow/enve.git" \
    clone_to || quiet_exit 1
    if [ "${INSTALL_LINKS:-}" = 1 ]; then
        "$CLONE_TO/libexec/enve/core/base/enve.setup" install-link
    fi
}

install_enve_link() {
    newlink="$(dirname "$ENVE_HOME")/bin/enve"

    if [ ! -x "$newlink" ]; then
        return 1
    fi
    if [ ! -d "/usr/local/bin" ]; then
        echo "/usr/local/bin not exists install failded" >&2
        return 1
    fi

    if [ -e "/usr/local/bin/enve" ]; then
        echo "override old link '$(readlink_posix "/usr/local/bin/enve")'" >&2
        echo "to new link '$newlink'" >&2
    fi
    ln -sf "$newlink" "/usr/local/bin/enve"
    # TODO:
    # ln -sf "$(dirname "$ENVE_HOME")/doc/man/enve.1" "/usr/local/share/man/man1/enve.1"
}

uninstall_enve() {
    rm "/usr/local/bin/enve"
    rm "/usr/local/share/man/man1/enve.1"
}

check_enve() {
    [ -e "/usr/local/bin/enve" ]
}

case "${1:-}" in
    noop) ;;
    install) INSTALL_LINKS=${INSTALL_LINKS:-1} install_enve_git;;
    install-link) install_enve_link;;
    uninstall) uninstall_enve;;
    check) check_enve || quiet_exit 1;;
esac
