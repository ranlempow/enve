#!/bin/sh

# shellcheck source=libexec/enve/base
. "$ENVE_HOME/enve/base"

# shellcheck source=libexec/enve/envelib
. "$ENVE_HOME/enve/envelib"

settrace

resolve_macos() {
    out_join PATH ':'
    [ -n "$TABLE" ] && echo "$TABLE"
    # (
    #     # shellcheck disable=2123
    #     PATH=
    #     export PATH
    #     eval "$(/usr/libexec/path_helper -s)"
    #     IFS=':'
    #     for p in $PATH; do
    #         out_list PATH "$p"
    #     done
    # )


    # if [ -n "${SSH_AUTH_SOCK:-}" ]; then
    #     out_var SSH_AUTH_SOCK "$SSH_AUTH_SOCK"
    # fi
    out_var enve.bound.ignore '**/.DS_Store'
    out_var enve.bound.ignore '**/.git/**'

    out_list BYPASS "SSH_AUTH_SOCK"
    out_list BYPASS "TERMINFO"
    out_list BYPASS "KITTY_WINDOW_ID"
    out_list BYPASS "COLORTERM"

    # out_var LC_ALL "en_US.UTF-8"
    # out_var LC_CTYPE "en_US.UTF-8"
    # out_var LANG "en_US.UTF-8"
    # out_var PYTHONIOENCODING "utf-8:surrogateescape"

    if [ "$(table_tail "core\\.target")" = "shell" ]; then
        size=$(table_tail "terminal.size")
        if [ -n "$size" ]; then
            out_var TERMSIZE "$size"
        fi
        theme=$(table_tail "terminal.theme")
        if [ -n "$theme" ]; then
            out_var TERMTHEME "$theme"
        fi
    fi

    fast_table_tail "core\\.target"
    if [ "$TABLE_TAIL" = "shell" ]; then

        # TODO: linux is also suitable this code
        fast_table_tail "terminal\\.size"
        if [ -n "$TABLE_TAIL" ] && [ -x "/usr/bin/tput" ]; then
            width="${TABLE_TAIL%%x*}"
            height="${TABLE_TAIL##*x}"
            out_code sh "OLD_COLUMNS=\$(/usr/bin/tput cols)"
            out_code sh "OLD_LINES=\$(/usr/bin/tput lines)"
            out_code sh "printf '\\033[8;%s;%st' \"${height}\" \"${width}\""
            out_raw_fast exit "printf '\\033[8;%s;%st' \"\${OLD_LINES}\" \"\${OLD_COLUMNS}\"" HOOK
            out_var TERMSIZE "$size"
        fi

        fast_table_tail "terminal\\.theme"
        if [ -n "$TABLE_TAIL" ]; then
            out_list BYPASS TERMTHEME
            out_code sh "OLD_TERMTHEME=\${TERMTHEME:-}"
            out_code sh "$ENVE_HOME/enve/core/macos/term_theme.applescript '$TABLE_TAIL'"
            out_raw_fast exit "if [ -n \"\$OLD_TERMTHEME\" ]; then $ENVE_HOME/enve/core/macos/term_theme.applescript \"\$OLD_TERMTHEME\"; fi" HOOK
        fi
    fi

    # case $name in
    #     TERMSIZE)
    #             if [ -n "$r_value" ] && [ "$target" = "shell" ] && [ -x "/usr/bin/tput" ]; then
    #                 # echo -e -n "\033[8;10;140t"
    #                 width="${r_value%%x*}"
    #                 height="${r_value##*x}"
    #                 eval_line "OLD_COLUMNS=\$(/usr/bin/tput cols)"
    #                 eval_line "OLD_LINES=\$(/usr/bin/tput lines)"
    #                 # eval_line "echo -e -n \"\\033[8;${height};${width}t\""
    #                 # exithook="${exithook}${exithook:+$newl}  echo -e -n \"\\033[8;\${OLD_LINES};\${OLD_COLUMNS}t\""
    #                 eval_line "printf '\\033[8;%s;%st' \"${height}\" \"${width}\""
    #                 exithook="${exithook}${exithook:+$newl}  printf '\\033[8;%s;%st' \"\${OLD_LINES}\" \"\${OLD_COLUMNS}\""
    #             fi
    #         ;;
    #     TERMTHEME)
    #             fast_get_system
    #             if [ -n "$r_value" ] && [ "$target" = "shell" ] && \
    #                [ "$ENVE_CACHED_OS" = "Darwin" ]; then
    #                 eval_line 'OLD_TERMTHEME="$TERMTHEME"'
    #                 eval_line "$ENVE_HOME/enve/core/macos/term_theme.applescript '$r_value'"
    #                 exithook="${exithook}${exithook:+$newl}  $ENVE_HOME/enve/core/macos/term_theme.applescript \"\$OLD_TERMTHEME\""
    #             fi
    #         ;;
    # esac
}

resolve_sublime() {
    [ -n "$TABLE" ] && echo "$TABLE"

    out_var GIT_EDITOR "$ENVE_HOME/enve/contrib/subliem/stopen -w"
}


main() {
    info "IN $ZERO/enve.module"
    TABLE=$(cat "${configfile:--}")
    # for proc in first basic command nix terminal prompt macos ssh \
    #             shell secret boundfiles; do
    for proc in macos sublime; do
        info "IN resolve_$proc"
        if ! TABLE=$(TABLE=$TABLE resolve_$proc); then
            _error "error at resolve_$proc"
            exit 1
        fi
        # info "OUT resolve_$proc"
    done

    info "OUT $ZERO/enve.module"
    [ -n "$TABLE" ] && echo "$TABLE"
}

# if [ "${TEST:-}" != "test" ]; then
# fi

