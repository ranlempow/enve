#!/usr/bin/env bash
set -euo pipefail
. "$1" define

echo IN $0 >&2

# TODO: python36Packages.tkinter
# TODO: dash^=^=0.38.0

prepare_hashstore() {
    path="$1"
    if [ -z "$path" ] || [ "$path" = "/" ]; then
        return 0
    fi
    if [ -e "$path.processing" ]; then
        rm -rf "$path"
    fi
    touch "$path.processing"
}

commit_hashstore() {
    if [ -z "$path" ] || [ "$path" = "/" ]; then
        return 0
    fi
    if [ -n "$path" ]; then
        if [ -e "${path}" ]; then
            rm -rf "$path.processing"
        fi
    fi
}

create_env() {
    set -euo pipefail
    stage=$1
    pipc_exec="$2"
    venv_exec="$3"
    requires="$4"

    reqinfile="$PYVENV_TMP/reqfile${stage}.in"
    reqfile="$PYVENV_TMP/reqfile${stage}.txt"
    # { table_subset "python\.require\.packages" || true; } | as_value > "$reqinfile"
    echo "$requires" > "$reqinfile"
    # pip-compile --version >&2
    # pip-compile --help >&2
    echo $pipc_exec --rebuild --verbose "$reqinfile" >&2
    echo pip-compile version: $($pipc_exec --version) >&2
    # echo pip version: $(pip --version) >&2
    # echo "which $(which python)" >&2
    # echo setuptools version: $(python -c "import setuptools; print(setuptools.__version__)") >&2


    "$pipc_exec" --rebuild --verbose "$reqinfile" >&2
    # echo "xxxxxxxxxxx" >&2
    # echo
    reqhash="$(shasum -a 256 --text "$reqfile" | awk '{ print $1 }')"

    hash_store="$PYVENV_TMP/venvs/$reqhash"
    mkdir -p "$PYVENV_TMP/venvs"
    if [ ! -e "$hash_store" ]; then
        prepare_hashstore "$hash_store"
        # ${python_exec} -m virtualenv "$PYVENV_TMP/venvs/$reqhash"
        "$venv_exec" "$hash_store" >&2
        # $hash_store/bin/python -m pip install --upgrade setuptools >&2
        $hash_store/bin/python -m pip install -r "$reqfile" >&2
        commit_hashstore "$hash_store"
    fi
    echo "$reqhash"
}

resolve_python() {
    TABLE=$(cat "${configfile:--}")
    
    PYVENV_TMP="$HOME/.cache/enve/python-pyvenv"
    mkdir -p "$PYVENV_TMP"

    # python27 python34 python35 python36
    # python_ver="$(table_tail "python\.version" | as_value)" || python_ver=3.6
    # if [ -n "$python_ver" ]; then
    #     python_exec=python${python_ver/./}
    # else
    #     python_exec=python36
    # fi
    # python_exec=python

    # echo "this?" >&2
    # out_var "nix.packages" "${python_exec}"
    # out_var "nix.packages" "${python_exec}Packages.pip"
    # out_var "nix.packages" "${python_exec}Packages.virtualenv"
    pipc_exec="$(which pip-compile)"
    venv_exec="$(which virtualenv)"

    pipc_ver="$(table_tail "python\.stage2\.pip-tools" || true )"
    venv_ver="$(table_tail "python\.stage2\.virtualenv" || true )"
    # echo "$TABLE" >&2
    # echo "pipc_ver: $pipc_ver" >&2

    if [ -n "$pipc_ver" ] || [ -n "$venv_ver" ]; then
        reqhash2=$(create_env 2 "$pipc_exec" "$venv_exec" "pip-tools${pipc_ver:+==$pipc_ver}${newl}virtualenv${venv_ver:+==$venv_ver}")
        pipc_exec="$PYVENV_TMP/venvs/$reqhash2/bin/pip-compile"
        venv_exec="$PYVENV_TMP/venvs/$reqhash2/bin/virtualenv"
    else
        #TODO:
        reqhash2=$(create_env 2 "$pipc_exec" "$venv_exec" "setuptools${newl}pip-tools${pipc_ver:+==$pipc_ver}${newl}virtualenv${venv_ver:+==$venv_ver}")
        pipc_exec="$PYVENV_TMP/venvs/$reqhash2/bin/pip-compile"
        venv_exec="$PYVENV_TMP/venvs/$reqhash2/bin/virtualenv"
    fi

    reqhash=$(create_env 1 "$pipc_exec" "$venv_exec" \
        "$({ table_subset "python\.require\.packages" || true; } | as_value)")

    out_join PATH ":"
    out_var VIRTUAL_ENV "$PYVENV_TMP/venvs/$reqhash"
    out_list PATH "$PYVENV_TMP/venvs/$reqhash/bin"
    echo "$TABLE"
    echo "END resolve_python" >&2
}

resolve_python
