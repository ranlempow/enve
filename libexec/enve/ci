#!/bin/sh

# __NAME__=ci
# __VERSION__=0.1.0
# __REPO__=https://github.com/ranlempow/enve.git


if [ -z "${ENVE_HOME:-}" ]; then
    echo "fatal: ENVE_HOME not set." >&2
    exit 1
fi

# shellcheck disable=2034
ENVE_PROGRAM=enve/ci


# shellcheck source=libexec/enve/base
. "$ENVE_HOME/enve/base"
settrace

if [ -n "${ENVE_REQ_VERSION:-}" ] || [ -n "${ENVE_REQ_SHELL:-}" ]; then
    # shellcheck source=libexec/enve/bootlib
    . "$ENVE_HOME/enve/bootlib"
    reexec_if_req_not_match "${ENVE_REQ_VERSION:-}" "${ENVE_REQ_SHELL:-}" "$@"
fi

# shellcheck source=libexec/enve/testlib
. "$ENVE_HOME/enve/testlib"



print_help() {
    prog="$(basename "$0")"
    echo "Usage: $prog [COMMON_OPTIONS] <COMMAND>"
    echo
    echo "Common Options"
    echo "    -f, --file <file>     parse config from the file"
    echo "    -c, --config <key>=<value>"
    echo "                          append a key-value pair to config"
    echo "    -r, --role <role>     add a role to the roles set"
    echo "    -p, --project <path>  default project is PWD, specfice another project folder instead"
    echo
    echo "Command"
    echo "    runset                run a url with setname"
}

cmd=$1
shift

case $cmd in
    noop)
        ;;
    run)
            ENVE_TEST_OUTPUT=${ENVE_TEST_OUTPUT:-$(mkdtemp "$(get_tempdir)/enve-test_XXXXXX")}
            do_harness_no_checkout "$@"
        ;;
    runset)
            do_harness "$@"
        ;;
    runset2)
            testsets "$@"
        ;;
    '')
            print_help >&2
            die
        ;;
esac





