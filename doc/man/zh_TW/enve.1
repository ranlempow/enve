.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "ENVE" "1" "August 2019" "" ""
.
.SH "NAME"
\fBenve\fR \- enve command line
.
.SH "創造恆定不變的執行環境"
enve的主要用途在於創造一個執行環境，讓使用者在這個新創的環境中執行一連串的命令。
.
.P
在準備環境的過程\fIenve\fR讓使用者透過設定檔，把後來的命令中所需要的程式軟體、軟體設定、依賴的函示庫等等預先準備到環境之中。
.
.P
每次\fIenve\fR創造環境前要求的輸入是：
.
.IP "\(bu" 4
一個設定檔
.
.IP "\(bu" 4
一個動詞
.
.IP "\(bu" 4
幾個角色
.
.IP "\(bu" 4
（可選）一組命令行
.
.IP "\(bu" 4
（隱含）一組檔案依賴。
.
.IP "" 0
.
.P
設定檔、角色、動詞會利用依賴的檔案創造一個環境。用這個環境來執行命令行，或是已經預先定義的命令。
.
.P
如果給定一樣設定檔、角色、動詞與檔案，會創造完全一模一樣的執行環境，不論何時創造、哪個平台創造，甚至是創造的作業系統是如何安裝如何設定等等，這些因素都不會讓創造出來的環境有所不同。
.
.SH "使用情境（Scenario）"
\fIenve\fR最常用在「創造軟體開發環境」，\fIenve\fR之中的大部分模組與軟體開發的用途有所相關。
.
.P
將\fIenve\fR用在這種情境時，環境設定檔通常位於專案資料夾的最頂層，並且命名為\fBenve\.ini\fR。選定這個名稱是因為在\fIWindows\fR時可以直接以記事本開啟，而且大部分的文字編輯軟體會正確的識別ini副檔名。
.
.P
開發人員從版本控制同步專案之後，在終端機輸入\fBenve \-f \./enve\.ini shell\fR，來進入到與其他專案成員所相同的開發環境之中。如果需要修改環境，只需要編輯環境設定檔\fBenve\.ini\fR後再同步專案，這樣其他成員就可以在同步專案之後也使用新修正的環境了。
.
.SH "設定檔"
為了要定義一個執行環境，使用者必須編寫一個設定檔，在這個設定檔裡會指出環境中要有怎麼樣的要素與配置。
.
.P
詳細參見 enve\-config(5) \fI\./enve\-config\.5\.html#\-Dependency\-On\-Evaluation\-\fR
.
.P
\fIto put it another way\fR
.
.SH "角色"
角色像是一個過濾器一樣，會刪除設定檔中所不符合角色的值鍵。
.
.P
下面這兩種類型的角色是預先定義的，會在每次enve發起時自動加入：
.
.IP "\(bu" 4
作業系統與平台所定義的角色
.
.IP "\(bu" 4
動詞而衍生的角色
.
.IP "" 0
.
.P
使用者也能夠自己定義新角色。
.
.P
詳細參見 enve\-table(1) \fIhttps://eddiekao\.github\.io/last/enve\-table\.html#roles\fR
.
.SH "動詞"
enve會為每一種動詞產生不同的環境，而不同的動詞也可能會用不同的方式來解釋設定檔。
.
.P
以下的預先定義動詞是常用的：
.
.TP
\fBrun\fR \fIcommands\fR
在環境中執行命令。
.
.TP
\fBshell\fR
打開屬於該環境的命令列。
.
.P
以下的動詞需要額外載入特定的模組才能使用：
.
.TP
\fBtest\fR
用於自動化測試，詳細請參見 enve\-config(5)
.
.TP
\fBbuild\fR
用於自動化建造，詳細請參見 enve\-config(5)
.
.TP
\fBdeploy\fR
用於自動化發佈，詳細請參見 enve\-config(5)
.
.SH "可重入與可遞迴"

